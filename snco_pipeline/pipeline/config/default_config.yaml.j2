### PIPELINE INPUT/OUTPUT

# annotation files defined below will be located relative to annotation dir
annotation_dir: "{{ annotation_dir | default('annotations') }}"
annotations:
    fasta_fns:
      # a fasta file is required for all genotypes that are listed as either parent1 or parent2
      # in the datasets section, unless a vcf is provided, in which case only the reference fastas are required
      {{ parent1_name | default('col0')}}: "{{ parent1_name | default('col0')}}.fa"
      {{ parent2_name | default('ler')}}: "{{ parent2_name | default('ler')}}.fa"
    gtf_fns:
      # a gtf file is required for all genotypes that are listed as reference_genotypes
      {{ parent1_name | default('col0')}}: "{{ parent1_name | default('col0')}}.gtf"
    barcode_whitelist_fns:
      # barcode whitelists for various single cell data types
      {{ single_cell_method | default('10x_rna_v4') }}: {{ barcode_whitelist_fns }}
    vcf_fns:
      # if supplied, vcf_fns switch off variant identification from whole genome alignment
      # one vcf should be supplied per reference_genotype (listed in datasets)
      # the vcfs should have haploid samples with the same names as the non-reference parent1/parent2 genotypes
      {{ reference_genotype | default('col0')}}: null


# input fastq files will be searched for within this directory
raw_data_dir: "{{ raw_data_dir | default('raw_data')}}"


# sample ids and sample specific information
datasets:
  {{ dataset_name | default('example_dataset') }}:
    # the type of sequencing technology used.
    # Can be one of "10x_rna_v3", "10x_rna_v4", "10x_atac", "bd_rna", "takara_dna", "plate_wgs"
    # NB: "takara_dna" and "plate_wgs" trigger a different method, where each barcode/cell/individual is in a separate fastq file
    # NB: datasets from "10x_rna_v3", "10x_rna_v4", "10x_atac", "bd_rna" can be mixed in same pipeline run, but 
    # NB: "takara_dna" and "plate_wgs" require their own separate runs 
    technology: "{{ single_cell_method | default('10x_rna_v4')}}"
    # the expected ploidy of each individual. Can be "haploid", "diploid_bc1" or "diploid_f2"
    ploidy: "haploid"
    # the genotype used as the reference genome in mapping
    reference_genotype: "{{ reference_genotype | default('col0')}}"
    input_file_basenames: 
      # the base names of the files that will be considered part of this sample 
      # useful for when a sample is split across multiple lanes & therefore fastqs
      # e.g. will be located at "{{ raw_data_dir | default('raw_data')}}/"{{ dataset_name | default('example_dataset') }}_1".1.fastq.gz"
      - "{{ dataset_name | default('example_dataset') }}_1"
      - "{{ dataset_name | default('example_dataset') }}_2"
      # glob wildcards can also be used to include multiple files at once e.g.:
      # - "{{ dataset_name | default('example_dataset') }}_*"

    genotypes:
      # you can add one or more different genotypes that have been pooled in the dataset
      {{ dataset_genotype_name | default('col0xler')}}:
        parent1: "{{ parent1_name | default('col0')}}"
        parent2: "{{ parent2_name | default('ler')}}"


file_suffixes:
  read1: ".1.fastq.gz" # file containing the fwd read (barcode seqs in 10x/BD RNA, DNA in 10x ATAC or wgs methods)
  read2: ".2.fastq.gz" # file containing the rev read (cDNA seqs in 10x/BD RNA, DNA in 10x ATAC or wgs method)
  barcode: ".bc.fastq.gz" # not present in 10x/BD RNA or wgs methods, contains cell barcode in  10x ATAC
  barcode_rc: ".bc_rc.fastq.gz" # file containing the reverse complemented 10x ATAC barcode sequences
                                # (this is autogenerated if required, see preprocessing)


# the pipeline ships with env_yamls that will be installed by snakemake
# if you prefer to supply your own yamls or use other pre-installed environments for certain steps,
# you can use this section to override them.
conda_envs:
  genmap: null # environment used for rules involving genmap, requires genmap, bedtools, samtools
  minimap2: null # environment used for rules involving minimap2, requires minimap2, samtools
  htslib: null # environment used for rules involving samtools/bcftools/bgzip/tabix
  seqtk: null # environment used for rules involving seqtk
  picard: null # environment used for rules involving picard tools (MarkDuplicates)
  msyd: null # environment used for rules involving syri and msyd (see https://github.com/schneebergerlab)
  star: null # environment used for rules involving STAR, requires STAR=2.7.11a
  snco: null # environment used for rules involving snco, also requires seaborn, ipykernel, nbconvert


# results will be created within this dir
results_dir: "{{ results_dir |  default('results')}}"


### PIPELINE PARAMS:

preprocessing:
  atac:
    rev_comp_barcode: True # necessary for some sequencing methods e.g. nanoball seq

variants:
  mappability:
    kmer_size: 100 # the kmer size for genmap mappability calculation
    edit_dist: 1 # number of edits allowed between kmers to consider them the same
    min_mappability: 0.51 # the min mappability to keep variants in - others are removed
  minimap2:
    preset: "asm10"
    zdrop: "500" # can be a single int or pair of ints, see minimap manual
  syri:
    use_low_qual_filters: False # whether to use syris default filtering
  star_consensus:
    max_hdr_length: 0 # the maximum size of syri HDRs to try to resolve to snps/indels
    max_indel_size: 50

alignment:
  star:
    sjdb_overhang_length: null # add an int. If null, will be identified from the data
    genome_sa_index_nbases: null # add an int. If null, will be identified from the data
    filter_multimap_nmax: 1
    filter_mismatch_nmax: 4
    rna:
      umi_dedup_method: "1MM_Directional_UMItools"
      align_intron_min: 60
      align_intron_max: 20000
      align_sj_overhang_min: 12
      align_sjdb_overhang_min: 4
    atac:
      mates_gap_max: 500

haplotyping:
  preprocessing:
    filter_pcr_duplicates: False # this is only used for data that does not have UMIs
    min_informative_reads_per_barcode: 100 # The min number of reads that uniquely distinguish the two haplotypes that a barcode must have
    min_informative_reads_per_chrom: 20 # The min number of haplotype-distinguishing reads per-barcode/sample per-chromosome
  snco:
    genomic_bin_size: 25_000 # Bin size for marker distribution
    segment_size: 1_000_000 # rfactor of the rigid HMM. Approximately controls minimum distance between COs
    terminal_segment_size: 50_000 # terminal rfactor of the rigid HMM. approx. controls min distance of COs from chromosome ends
    cm_per_mb: 4.5 # the expected crossover frequency in centiMorgans per megabase - used to parametrise the rHMM
